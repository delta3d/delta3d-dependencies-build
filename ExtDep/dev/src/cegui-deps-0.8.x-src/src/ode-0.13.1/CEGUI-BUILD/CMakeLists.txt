project(ode)
set(DEPNAME ode)

include(CheckFunctionExists)
include(CheckIncludeFile)

MACRO(CHECK_INCLUDE_FILE_DEFINE HEADER VAR)
CHECK_INCLUDE_FILE(${HEADER} HAVE_INCLUDE_FILE)
IF(HAVE_INCLUDE_FILE)
  ADD_DEFINITIONS("-D${VAR}=1")
  SET(${VAR} 1 CACHE INTERNAL "")
ENDIF(HAVE_INCLUDE_FILE)
ENDMACRO(CHECK_INCLUDE_FILE_DEFINE ARG)

MACRO(CHECK_FUNCTION_EXISTS_DEFINE FUNC VAR)
CHECK_FUNCTION_EXISTS(${FUNC} ${VAR})
IF(${VAR})
  ADD_DEFINITIONS("-D${VAR}=1")
ENDIF(${VAR})
ENDMACRO(CHECK_FUNCTION_EXISTS_DEFINE FUNC VAR)


CHECK_INCLUDE_FILE_DEFINE(dlfcn.h       HAVE_DLFCN_H)
CHECK_INCLUDE_FILE_DEFINE(float.h       HAVE_FLOAT_H)
CHECK_INCLUDE_FILE_DEFINE(inttypes.h    HAVE_INTTYPES_H)
CHECK_INCLUDE_FILE_DEFINE(malloc.h      HAVE_MALLOC_H)
CHECK_INCLUDE_FILE_DEFINE(limits.h      HAVE_LIMITS_H)
CHECK_INCLUDE_FILE_DEFINE(math.h        HAVE_MATH_H)
CHECK_INCLUDE_FILE_DEFINE(memory.h      HAVE_MEMORY_H)
CHECK_INCLUDE_FILE_DEFINE(stdbool.h     HAVE_STDBOOL_H)
CHECK_INCLUDE_FILE_DEFINE(stddef.h      HAVE_STDDEF_H)
CHECK_INCLUDE_FILE_DEFINE(stdint.h      HAVE_STDINT_H)
CHECK_INCLUDE_FILE_DEFINE(stdio.h       HAVE_STDIO_H)
CHECK_INCLUDE_FILE_DEFINE(stdlib.h      HAVE_STDLIB_H)
CHECK_INCLUDE_FILE_DEFINE(strings.h     HAVE_STRINGS_H)
CHECK_INCLUDE_FILE_DEFINE(string.h      HAVE_STRING_H)
CHECK_INCLUDE_FILE_DEFINE(sys/stat.h    HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILE_DEFINE(sys/time.h    HAVE_SYS_TIME_H)
CHECK_INCLUDE_FILE_DEFINE(sys/types.h   HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILE_DEFINE(time.h        HAVE_TIME_H)
CHECK_INCLUDE_FILE_DEFINE(unistd.h      HAVE_UNISTD_H)

CHECK_FUNCTION_EXISTS_DEFINE(alloca     HAVE_ALLOCA)
CHECK_FUNCTION_EXISTS_DEFINE(atan2f     HAVE_ATAN2F)
CHECK_FUNCTION_EXISTS_DEFINE(copysign   HAVE_COPYSIGN)
CHECK_FUNCTION_EXISTS_DEFINE(copysignf  HAVE_COPYSIGNF)
CHECK_FUNCTION_EXISTS_DEFINE(cosf       HAVE_COSF)
CHECK_FUNCTION_EXISTS_DEFINE(sinf       HAVE_SINF)
CHECK_FUNCTION_EXISTS_DEFINE(fabsf      HAVE_FABSF)
CHECK_FUNCTION_EXISTS_DEFINE(floor      HAVE_FLOOR)
CHECK_FUNCTION_EXISTS_DEFINE(fmodf      HAVE_FMODF)
CHECK_FUNCTION_EXISTS_DEFINE(gettimeofday HAVE_GETTIMEOFDAY)
CHECK_FUNCTION_EXISTS_DEFINE(isnan      HAVE_ISNAN)
CHECK_FUNCTION_EXISTS_DEFINE(isnanf     HAVE_ISNANF)
CHECK_FUNCTION_EXISTS_DEFINE(memset     HAVE_MEMSET)
CHECK_FUNCTION_EXISTS_DEFINE(pthread_attr_setstacklazy HAVE_PTHREAD_ATTR_SETSTACKLAZY)
CHECK_FUNCTION_EXISTS_DEFINE(snprintf   HAVE_SNPRINTF)
CHECK_FUNCTION_EXISTS_DEFINE(sqrt       HAVE_SQRT)
CHECK_FUNCTION_EXISTS_DEFINE(sqrtf      HAVE_SQRTF)
CHECK_FUNCTION_EXISTS_DEFINE(strchr     HAVE_STRCHR)
CHECK_FUNCTION_EXISTS_DEFINE(strstr     HAVE_STRSTR)
CHECK_FUNCTION_EXISTS_DEFINE(_isnan     HAVE__ISNAN)
CHECK_FUNCTION_EXISTS_DEFINE(_isnanf    HAVE__ISNANF)
CHECK_FUNCTION_EXISTS_DEFINE(__isnan    HAVE___ISNAN)
CHECK_FUNCTION_EXISTS_DEFINE(__isnanf   HAVE___ISNANF)
CHECK_FUNCTION_EXISTS_DEFINE(vsnprintf  HAVE_VSNPRINTF)


if(NOT APPLE)
  CHECK_INCLUDE_FILE_DEFINE(GL/glext.h   HAVE_GL_GLEXT_H)
  CHECK_INCLUDE_FILE_DEFINE(GL/glu.h     HAVE_GL_GLU_H) 
  CHECK_INCLUDE_FILE_DEFINE(GL/gl.h      HAVE_GL_GL_H) 
endif()


file(GLOB GI_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../GIMPACT/src/*.c*")
file(GLOB OP_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../OPCODE/*.c*")
file(GLOB OPICE_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../OPCODE/Ice/*.c*")
file(GLOB ODE_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../ode/src/*.c*")
file(GLOB ODE2_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../ode/src/joints/*.c*")
file(GLOB CCD_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../libccd/src/*.c*")
file(GLOB OU_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../ou/src/*.c*")
file(GLOB OU2_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../ou/src/ou/*.c*")

set(SOURCES ${GI_SOURCES} ${OP_SOURCES} ${OPICE_SOURCES} ${ODE_SOURCES} ${ODE2_SOURCES} ${CCD_SOURCES} ${OU_SOURCES} ${OU2_SOURCES})

message (${SOURCES})

set(HEADERS 
collision.h
collision_space.h
collision_trimesh.h
common.h
compatibility.h
contact.h
error.h
export-dif.h
mass.h
matrix.h
memory.h
misc.h
objects.h
ode.h
odeconfig.h
odecpp.h
odecpp_collision.h
odeinit.h
odemath.h
odemath_legacy.h
precision.h
rotation.h
threading.h
threading_impl.h
timer.h
version.h
)


include_directories(../include ../GIMPACT/include ../OPCODE ../ode/src ../libccd/src ../ou/include)

cegui_add_library(${DEPNAME} SOURCES NONE)

set_property(TARGET ${DEPNAME} APPEND PROPERTY
    COMPILE_DEFINITIONS "dIDESINGLE;_OU_NAMESPACE=odeou;HAVE_CONFIG_H;__ODE__;dTRIMESH_ENABLED;dTRIMESH_OPCODE;MAC_OS_X_VERSION=1080")

set_target_properties(${DEPNAME}_static PROPERTIES
    COMPILE_DEFINITIONS "dIDESINGLE;_OU_NAMESPACE=odeou;HAVE_CONFIG_H;__ODE__;dTRIMESH_ENABLED;dTRIMESH_OPCODE;MAC_OS_X_VERSION=1080")

MAKE_DIRECTORY("${CMAKE_BINARY_DIR}/dependencies/include/ode/")

foreach(_H_FILE ${HEADERS})
    #message(${_H_FILE})
    add_custom_command(TARGET ${DEPNAME} POST_BUILD 
                       COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/../include/ode/${_H_FILE}" "${CMAKE_BINARY_DIR}/dependencies/include/ode/${_H_FILE}")
endforeach()


add_custom_command(TARGET ${DEPNAME} POST_BUILD 
                   COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/../LICENSE.TXT" "${CMAKE_BINARY_DIR}/dependencies/ode-license.txt")

