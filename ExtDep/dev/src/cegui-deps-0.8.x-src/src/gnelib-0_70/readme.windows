Windows specific information for GNE.

1. Dependencies

Compilers:
  * GCC: General requirements are GCC version 3.x or higher with a modern
    libstdc++. Make is also required.  GCC version 4.0.3 and 3.4.2 were tested
    with GNE.
  * MSVC: MSVC 2005 and 2008 (Express Edition) tested, 2002 and 2003 expected
    to work.

GCC 2.9x was recently supported but is deprecated and has not been tested
since GNE 0.70.

1.1 HawkNL

Install HawkNL.  HawkNL has its own installation process, which does involve
a makefile.  Version 1.68 is highly reccommended, but if you try to use an
earler version, you should compile with NL_WIN_THREADS defined (this became
default in 1.67).  1.7 beta would work but I've seen compile problems with
it -- but if you get it compiled it should work.

Alternatively, you can use the new CMake build-based distribution from
Jason Winnebeck. You can build HawkNL separately in this case and install it,
and in UNIX-like systems CMake will detect it when compiling GNE. You can
also "embed" HawkNL to build with GNE by placing its source into a folder
called "hawknl" under GNE's root. If HawkNL is not detected in the traditional
manner, then GNE will compile hawknl found in this directory and use that.
When installing GNE, HawkNL's libraries will come alongside GNE's in the "lib"
directory.

1.2 Boost

Install Boost, version 1.32 or later. Version 1.40.0 was also recenlty tested
and worked. GNE does not make use of any of the compiled parts of Boost, so no
compilation is needed.

Recent CMake versions (tested with 2.8.0) seem to find Boost automatically if
it is in a directory like C:\Program Files\boost\boost_1_40_0. It also appears
that setting BOOST_ROOT environment variable works. If CMake cannot find Boost,
look for BOOST_INCLUDE_DIR in advanced CMake settings and point it to Boost's
location.

1.3 CMake

GNE requires CMake a 2.4 or later for its build process under Windows. Earlier
2.4 versions seem to have a problem building GNE's docs target; at least 2.4.7
works.

Installing CMake is VERY easy! Just head to the download page and get the
latest version (2.8.0 at the time of writing):

http://cmake.org/cmake/resources/software.html

1.4 Doxygen

Doxygen is an OPTIONAL dependency.  Any recent version should work fine, but
1.4.7 was tested on this release.  The file was recently upgraded with Doxygen
1.4.7, but I don't believe that should affect backwards compatibility.

You can find doxygen at:

http://www.stack.nl/~dimitri/doxygen/index.html

1.6 Dot

The dot tool from the graphvis package is an OPTIONAL dependency. If it is
detected and doxygen is detected and documentation is configured to be built,
dot will be used.

2. Installation

Unfortunately, the build situation on Windows is not as good as the one for
UNIX, although it is greatly improved with the introduction of CMake.

After installing CMake, run the CMake program, locate the path where you
downloaded GNE and set the build path to a directory under GNE such as "build".
Then select the build system that you prefer, such as MinGW or MSYS makefiles
or MSVC workspaces for your version of MSVC.

The primary problem is that there is no "standard" place to find out if
certain libraries are installed.  Therefore, there is a great possibility that
Boost and HawkNL will not be detected.  My experience is that if Doxygen and
dot are installed as default, they will be detected by CMake, but please check
those paths as well.

If CMake fails to find something (it probably will), then you will see error
messages come up -- but don't worry!  Let them come by and then define the
variables that are NOTFOUND, minimally those for Boost and HawkNL.

After this is complete, customize any additional GNE options -- context help
will appear at the bottom of the dialog.  When you are done, press configure,
then OK to generate the build system and exit.

Common Information:

By default, GNE will install into the following places:

%PROGRAMFILES%/GNE/lib/libgnelib.a
%PROGRAMFILES%/GNE/include/gnelib.h
%PROGRAMFILES%/GNE/include/gnelib/*.h
%PROGRAMFILES%/GNE/share/libgnelib-dev/examples/*
%PROGRAMFILES%/GNE/share/libgnelib-dev/docs/*

If you wish to pick a different install prefix, please use CMake to change
CMAKE_INSTALL_PREFIX.

Currently there is no uninstall functionality provided, but this may be
corrected in a future version.  For the moment you could manually delete the
GNE directory -- nothing outside of that was modified nor were any registry
entries made.

2.1 Installation -- MSVC

For MSVC, workspaces will be generated.  Open the generated solution file in
MSVC and build "ALL_BUILD" with your desired configuration.  Optionally build
the "install" project to install GNE.  Documentation and example targets will
be included in ALL_BUILD if configured.

2.2 Installation -- MSVC 2005

If you have MSVC 2005 (version 8), you may opt to use the supplied solution
and skip using CMake -- however, you are mostly on your own.  Please be aware
of the following:

 * You must add Boost include, HawkNL include, and the directory containing
   hawknl.lib to your compiler's paths.
 * Documentation generation with Doxygen is not supported
 * There is no "installation" target

It is suggested that end-users who just want to compile GNE use CMake. The
only advantage to the hand-built MSVC 2005 workspace is for GNE developers
as it supports precompiled headers.

2.3 Installation -- MinGW

Using mingw32-make.exe, build the generated makefiles.

If you want to install, run:

mingw32-make install

You can also prepend the above paths with DESTDIR as shown below:

mingw32-make install DESTDIR="/path/that/I/want"

The final path will be $DESTDIR/$CMAKE_INSTALL_PREFIX

3. Documentation

Documentation is automatically built by default if doxygen is detected, and
is placed in share/libgnelib-dev/docs.

You can also download the documentation, beginner's guide, and GNE tutorials
from the GNE website, if you do not have or do not wish to install doxygen
and/or DOT.

4. Examples

Examples are not compiled by default.  If you wish to compile all included
example programs, use CMake to set building of examples to ON.

Examples will be installed in share/libgnelib-dev/examples.
